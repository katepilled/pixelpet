<head>
    <style>
        .pet-container {
            position: relative;
            width: 500px;
            display: flex;
            margin: auto;
        }

        .pet-image {
            width: 100px;
            position: absolute;
            top: 70%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 10;
        }

        .room {
            width: 500px;
            height: auto;
            max-width: 100%;
            display: block;
            margin-left: auto;
            margin-right: auto;
        }

        .stats {
            width: 100px;
            position: absolute;
            top: 12px;
            left: 16px;

        }
    </style>
</head>

<body>
    <div class="fixed top-0 right-0 p-6 z-20">
        <div x-data="{ dropdownOpen: false }" class="relative">
            <button @click="dropdownOpen = !dropdownOpen"
                class="relative z-10 block rounded-md bg-grass p-2 focus:outline-none">
                <svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"
                    fill="currentColor">
                    <path fill-rule="evenodd"
                        d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                        clip-rule="evenodd" />
                </svg>
            </button>

            <div x-show="dropdownOpen" @click="dropdownOpen = false" class="fixed inset-0 h-full w-full z-10"></div>

            <div x-show="dropdownOpen"
                class="absolute top-0 right-0 mt-12 py-2 w-48 bg-white rounded-md shadow-xl z-20">
                <a href="/about" class="block px-4 py-2 text-sm text-gray-700 hover:bg-grass hover:text-white">
                    about
                </a>
                <a href="/name" class="block px-4 py-2 text-sm text-gray-700 hover:bg-grass hover:text-white">
                    rename your pet
                </a>
                <a href="/warning" class="block px-4 py-2 text-sm text-gray-700 hover:bg-grass hover:text-white">
                    get a new pet
                </a>

                <form action="/logout" method="post" class="mb-0">
                    <button type="submit"
                        class="block w-full px-4 py-2 mb-0 text-sm text-left text-gray-700 hover:bg-grass hover:text-white">
                        log out
                    </button>
                </form>
            </div>
        </div>
    </div>
    <div class='flex flex-col items-center'>
        <h1 class='text-6xl font-cherry text-stroke text-grass mb-4'>
            ★ {{pet.name}}'s room ★
        </h1>
        <h1 id='greeting' class='font-pixel text-xl text-center mb-6'></h1>
    </div>

    <div class="items-center screen">
        <div class="z-0 pet-container">
            <img src="/images/room.png" class="rounded-md room">

            <div class='z-20 stats'>
                <p class="font-pixel text-sm">{{pet.name}} is:</p>
                <p class="font-pixel text-sm"> {{pet.age}} days old</p>
                <p class="font-pixel text-sm" id="hunger"> {{pet.hunger_level}}% full</p>
                <p class="font-pixel text-sm" id="cleanliness">{{pet.cleanliness}}% clean</p>
                <p class="font-pixel text-sm" id="happiness">{{pet.happiness_level}}% happy</p>
            </div>

            {{#if_eq pet.type 'cat'}}
            <img class='pet-image' src='/images/cat.png' alt='cat' />
            {{else if_eq pet.type 'dog'}}
            <img class='pet-image' src='/images/dog.png' alt='dog' />
            {{else if_eq pet.type 'bunny'}}
            <img class='pet-image' src='/images/bunny.png' alt='bunny' />
            {{/if_eq}}
        </div>
    </div>



    <div class="flex justify-center space-x-12 mt-2">
        <form action="/pet/feed" method="POST">
            <button id="feedBtn" type='submit'
                class='font-pixel bg-grass text-white px-4 py-2 rounded hover:bg-grass-hover'> feed </button>
        </form>
        <form action='/pet/play' method='POST'>
            <button id="playBtn" type='submit'
                class='font-pixel bg-grass text-white px-4 py-2 rounded hover:bg-grass-hover'> play </button>
        </form>
        <form action='/pet/clean' method='POST'>
            <button id="cleanBtn" type='submit'
                class='font-pixel bg-grass text-white px-4 py-2 rounded hover:bg-grass-hover '> clean </button>
        </form>
    </div>


</body>

<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js" defer></script>
<script>
    document.addEventListener('DOMContentLoaded', main);

    function main() {

        const feedBtn = document.getElementById('feedBtn');
        const playBtn = document.getElementById('playBtn');
        const cleanBtn = document.getElementById('cleanBtn');

        const hunger = document.getElementById('hunger');
        const happiness = document.getElementById('happiness');
        const cleanliness = document.getElementById('cleanliness');

        const greeting = document.getElementById('greeting');

        // update greeting
        async function updateGreeting() {
            try {
                const res = await fetch('/pet/state', {
                    method: 'GET',
                })

                const pet = await res.json();

                const name = pet.name;
                const hunger = pet.hunger_level;
                const happiness = pet.happiness_level;
                const cleanliness = pet.cleanliness;

                if (hunger <= 50) {
                    greeting.innerHTML = `${name} is hungry!`;
                } else if (cleanliness <= 25) {
                    greeting.innerHTML = `${name} needs a bath!`;
                } else if (happiness <= 50) {
                    greeting.innerHTML = `${name} wants to play!`;
                } else {
                    greeting.innerHTML = `${name} is so happy to see you!`;
                }
            } catch (error) {
                console.log(error);
            }
        }

        // initial update
        updateGreeting();

        // feed pet
        feedBtn.addEventListener('click', async function (event) {
            event.preventDefault();
            try {

                const res = await fetch('/pet/feed', {
                    method: 'POST',
                })
                if (!res.ok) {
                    throw new Error('Failed to feed pet');
                }
                const newHunger = await res.json();
                updateGreeting();
                hunger.innerHTML = `${newHunger}% full`;

            } catch (error) {
                console.log(error);
            }
        });

        // play with pet
        playBtn.addEventListener('click', async function (event) {
            event.preventDefault();
            try {
                const res = await fetch('/pet/play', {
                    method: 'POST',
                })
                if (!res.ok) {
                    throw new Error('Failed to play with pet');
                }
                const newHappiness = await res.json();
                updateGreeting();
                happiness.innerHTML = `${newHappiness}% happy`;

            } catch (error) {
                console.log(error);
            }
        });

        // clean pet
        cleanBtn.addEventListener('click', async function (event) {
            event.preventDefault();
            try {
                const res = await fetch('/pet/clean', {
                    method: 'POST',
                })
                if (!res.ok) {
                    throw new Error('Failed to clean pet');
                }
                const newCleanliness = await res.json();
                updateGreeting();
                cleanliness.innerHTML = `${newCleanliness}% clean`;

            } catch (error) {
                console.log(error);
            }
        });

    }

</script>